name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
env:
  GO_VERSION: "1.24.x"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-binaries:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-tags: true
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Version
        id: version
        run: |
          version="${GITHUB_REF#refs/tags/}"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Previous Tag
        id: previous-tag
        run: |
          tag=$(git describe --tags --abbrev=0 "${GITHUB_REF}^")
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Go Build
        run: |
          version="${{ steps.version.outputs.version }}"

          mkdir -p releases
          GOOS=linux GOARCH=amd64 go build -ldflags="-X 'github.com/teamwork/mcp/internal/config.Version=$version'" -o releases/tw-mcp-linux-amd64 ./cmd/mcp-stdio
          GOOS=linux GOARCH=arm64 go build -ldflags="-X 'github.com/teamwork/mcp/internal/config.Version=$version'" -o releases/tw-mcp-linux-arm64 ./cmd/mcp-stdio
          GOOS=darwin GOARCH=amd64 go build -ldflags="-X 'github.com/teamwork/mcp/internal/config.Version=$version'" -o releases/tw-mcp-darwin-amd64 ./cmd/mcp-stdio
          GOOS=darwin GOARCH=arm64 go build -ldflags="-X 'github.com/teamwork/mcp/internal/config.Version=$version'" -o releases/tw-mcp-darwin-arm64 ./cmd/mcp-stdio
          GOOS=windows GOARCH=amd64 go build -ldflags="-X 'github.com/teamwork/mcp/internal/config.Version=$version'" -o releases/tw-mcp-windows-amd64.exe ./cmd/mcp-stdio

      - name: Create Release
        run: |
          version="${{ steps.version.outputs.version }}"
          gh release create $version \
            --fail-on-no-commits \
            --generate-notes \
            --notes-start-tag ${{ steps.previous-tag.outputs.tag }} \
            --verify-tag \
            releases/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
