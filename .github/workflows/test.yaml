name: Test
on:
  pull_request:
  push:
    branches:
      - main

env:
  GO_VERSION: "1.24.x"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: [self-hosted, staging, default]

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.AWS_ECR_MASTER_ACCOUNT }}.dkr.ecr.${{ vars.AWS_ECR_MASTER_REGION }}.amazonaws.com
          username: ${{ secrets.AWS_ECR_MASTER_ACCESS_KEY }}
          password: ${{ secrets.AWS_ECR_MASTER_SECRET_ACCESS_KEY }}

      - run: docker context create builders
      - uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: builders
          driver-opts: |
            image=${{ vars.AWS_ECR_MASTER_ACCOUNT }}.dkr.ecr.${{ vars.AWS_ECR_MASTER_REGION }}.amazonaws.com/proxy/moby/buildkit:buildx-stable-1

      - name: Checkout Teamwork Central Build Actions
        uses: actions/checkout@v5
        with:
          repository: Teamwork/gha-builds
          ref: main
          token: ${{ secrets.GH_ADMIN_TOKEN }}
          path: .github/actions/build
          persist-credentials: false

      - name: Default Go Build
        uses: ./.github/actions/build/go/default
        with:
          GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          ECR_ACCOUNT: ${{ vars.AWS_ECR_MASTER_ACCOUNT }}
          ECR_REGION: ${{ vars.AWS_ECR_MASTER_REGION }}
          ECR_ACCESS_KEY: ${{ secrets.AWS_ECR_MASTER_ACCESS_KEY }}
          ECR_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_MASTER_SECRET_ACCESS_KEY }}
          IMAGE_REPO_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_REPO_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          IMAGE_NAME: "mcp"
          HELM_CHART_PATH: "chart"
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          BUILD_PROD: true
          PUSH_PROD: false
          PUSH_DEV_ENV: false
          UPDATE_HELM_CHART: false

  lint:
    runs-on: [self-hosted, staging, default]
    needs: build

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download modules
        run: |
          git config --global url."https://${{ secrets.GH_ADMIN_TOKEN }}@github.com/".insteadOf "https://github.com/"
          go mod download
        env:
          GOPRIVATE: github.com/teamwork

      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.2

  test:
    runs-on: [self-hosted, staging, default]
    needs: build

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download modules
        run: |
          git config --global url."https://${{ secrets.GH_ADMIN_TOKEN }}@github.com/".insteadOf "https://github.com/"
          go mod download
        env:
          GOPRIVATE: github.com/teamwork

      - name: Test
        run: go test -v  ./...